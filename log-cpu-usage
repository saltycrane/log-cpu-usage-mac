#!/bin/bash

# Set PATH because `ioreg` was not working with cron
PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin

# Get the log directory from the first argument on the command line (default to the current directory)
log_directory=${1:-"."}
log_file="$log_directory/cpu-usage.log"
top_processes_log_file="$log_directory/top-processes.log"
date_file="$log_directory/last-rotation-date.txt"
echo "Log directory: $log_directory"
mkdir -p "$log_directory"

# Rotate the log files if the date has changed
current_date=$(date +'%Y%m%d')
if [ -f "$date_file" ]; then
    last_rotation_date=$(cat "$date_file")
    if [ "$current_date" != "$last_rotation_date" ]; then
        log_file_archived="$log_file.$last_rotation_date"
        top_processes_log_file_archived="$top_processes_log_file.$last_rotation_date"
        mv -f "$log_file" "$log_file_archived"
        mv -f "$top_processes_log_file" "$top_processes_log_file_archived"
        gzip -f "$log_file_archived"
        gzip -f "$top_processes_log_file_archived"
        echo "$current_date" > "$date_file"
    fi
else
    echo "$current_date" > "$date_file"
fi

# Get various information to log
current_datetime=$(date +'%Y-%m-%d %H:%M:%S')
top_output=$(top -l 2 -n 5 -stats command,cpu,time,state,user)  # the `top` command is run twice so it takes a couple seconds
idle_time_total_mins=$(ioreg -c IOHIDSystem | awk '/HIDIdleTime/ {print $NF/1000000000/60; exit}')
idle_time_hours=$(echo "$idle_time_total_mins / 60" | bc)
idle_time_mins=$(echo "$idle_time_total_mins % 60" | bc)
idle_time=$(printf "%dh%.0fm" "$idle_time_hours" "$idle_time_mins")
avg_load_1=$(echo "$top_output" | grep "Load Avg" | awk 'NR==2' | awk '{print $3}' | tr -d ',')
cpu_usage=$(echo "$top_output" | grep "CPU usage" | awk 'NR==2' | awk '{print $3, $5, $7}' | tr -d '%')

# Determine list of newly started and stopped processes
current_processes="/tmp/current-processes-${USER}.txt"
previous_processes="/tmp/previous-processes-${USER}.txt"
ps -eo comm | tail -n +2 | sort | uniq > "$current_processes"
if [ -f "$previous_processes" ]; then
    started_processes=$(comm -13 "$previous_processes" "$current_processes" | awk '{printf "%s%s", (NR==1 ? "" : ","), $0}')
fi
if [ -z "$started_processes" ]; then
    started_processes="[NONE]"
fi
mv -f "$current_processes" "$previous_processes"

# Write to the "cpu-usage.log" file
if [ ! -f "$log_file" ]; then
    echo "Date Time IdleTime LoadAvg1 CpuUser CpuSys CpuIdle StartedProcesses" > "$log_file"
fi
echo "$current_datetime $idle_time $avg_load_1 $cpu_usage $started_processes" >> "$log_file" 2>&1

# If the 1-minute load average is > 10, log the top 5 processes to the "top-processes.log" file
if (( $(echo "$avg_load_1 > 10" | bc -l) )); then
    printf "\n========================================================================\n" >> "$top_processes_log_file"
    echo "$top_output" | grep -vE '^(Processes|SharedLibs|MemRegions|PhysMem|VM|Networks|Disks):' | tail -10 >> "$top_processes_log_file"
fi
